// <auto-generated />
using System;
using FoodRocket.DBContext.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodRocket.DBContext.Migrations.Orders
{
    [DbContext(typeof(OrdersDbContext))]
    [Migration("20221130054944_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("orders")
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.Dish", b =>
                {
                    b.Property<long>("DishId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("DishId");

                    b.ToTable("Dishes", "orders");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.DishMenu", b =>
                {
                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<long>("DishId")
                        .HasColumnType("bigint");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int?>("PromotionPriceOfferId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuId", "Version", "DishId");

                    b.HasIndex("DishId");

                    b.HasIndex("PromotionPriceOfferId");

                    b.ToTable("DishMenu", "orders");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.Ingredient", b =>
                {
                    b.Property<long>("IngredientId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients", "orders");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.IngredientDish", b =>
                {
                    b.Property<long>("IngredientId")
                        .HasColumnType("bigint");

                    b.Property<long>("DishId")
                        .HasColumnType("bigint");

                    b.Property<string>("NameOfUnitOfMeasureId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("RequiredInUnitOfMeasureId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RequiredQuantity")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("IngredientId", "DishId");

                    b.HasIndex("DishId");

                    b.ToTable("IngredientDish", "orders");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.Menu", b =>
                {
                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<long>("ChangedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MenuId", "Version");

                    b.ToTable("Menus", "orders");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long>("ManagerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalSum")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long>("WaiterId")
                        .HasColumnType("bigint");

                    b.HasKey("OrderId");

                    b.ToTable("Orders", "orders");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.OrderItem", b =>
                {
                    b.Property<long>("OrderItemId")
                        .HasColumnType("bigint");

                    b.Property<int?>("AppliedPriceOfferPriceOfferId")
                        .HasColumnType("int");

                    b.Property<long?>("DishFromMenuDishId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DishFromMenuMenuId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DishFromMenuVersion")
                        .HasColumnType("int");

                    b.Property<decimal>("ItemTotalSum")
                        .HasColumnType("decimal(12,2)");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("AppliedPriceOfferPriceOfferId");

                    b.HasIndex("OrderId");

                    b.HasIndex("DishFromMenuMenuId", "DishFromMenuVersion", "DishFromMenuDishId");

                    b.ToTable("OrderItems", "orders");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.PriceOffer", b =>
                {
                    b.Property<int>("PriceOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceOfferId"), 1L, 1);

                    b.Property<long>("DishId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("PromotionalText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PriceOfferId");

                    b.ToTable("PriceOffers", "orders");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.DishMenu", b =>
                {
                    b.HasOne("FoodRocket.DBContext.Models.Orders.Dish", "Dish")
                        .WithMany("MenusLink")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodRocket.DBContext.Models.Orders.PriceOffer", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionPriceOfferId");

                    b.HasOne("FoodRocket.DBContext.Models.Orders.Menu", "Menu")
                        .WithMany("DishesLink")
                        .HasForeignKey("MenuId", "Version")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Menu");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.IngredientDish", b =>
                {
                    b.HasOne("FoodRocket.DBContext.Models.Orders.Dish", "Dish")
                        .WithMany("IngredientsLink")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodRocket.DBContext.Models.Orders.Ingredient", "Ingredient")
                        .WithMany("DishesLink")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.OrderItem", b =>
                {
                    b.HasOne("FoodRocket.DBContext.Models.Orders.PriceOffer", "AppliedPriceOffer")
                        .WithMany()
                        .HasForeignKey("AppliedPriceOfferPriceOfferId");

                    b.HasOne("FoodRocket.DBContext.Models.Orders.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.HasOne("FoodRocket.DBContext.Models.Orders.DishMenu", "DishFromMenu")
                        .WithMany()
                        .HasForeignKey("DishFromMenuMenuId", "DishFromMenuVersion", "DishFromMenuDishId");

                    b.Navigation("AppliedPriceOffer");

                    b.Navigation("DishFromMenu");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.Dish", b =>
                {
                    b.Navigation("IngredientsLink");

                    b.Navigation("MenusLink");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.Ingredient", b =>
                {
                    b.Navigation("DishesLink");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.Menu", b =>
                {
                    b.Navigation("DishesLink");
                });

            modelBuilder.Entity("FoodRocket.DBContext.Models.Orders.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
